(function(window, $, undefined) {	var cmmUtils = function() {		this.CODE_JONGMOK_D=1;		this.CODE_KJONGMOK_D=2;		this.CODE_OTCBB_D=3;		this.CODE_ELW_D=4;		this.CODE_GOLDSPOT_D=5;		this.CODE_KQ150_LFTURE_D=6;		this.CODE_KQ150FUT_D=7;		this.CODE_FUTURE_D=8;		this.CODE_SPREAD_D=9;		this.CODE_OPTION_D=10;		this.CODE_MOPTION_D=11;		this.CODE_LOPTION_D=12;		this.CODE_ETFJONGMOK_D=13;		this.CODE_ETNJONGMOK_D=14;		this.CODE_INSU_D=15;		this.CODE_SUIK_D=16;		this.topMenuHtml=''; //전체메뉴 html 		this.topFavMenuBtnToggle=false; //전체메뉴 및 즐겨찾기 토글		this.topMenuShow=false; // 전체메뉴 클릭 구분		this.topFavHistoryShow=false; // 즐겨찾기 클릭 구분		this.favData=['0100','0300','0560','0101','0611','0621']; //즐겨찾기 데이터		this.hogaList=['051','071','052','072','053','073','054','074','055','075','056','076','057','077','058','078','059','079','060','080']; // 호가 실시간 심볼([0101] 현재가)		this.hogaList1=['751','771','752','772','753','773','754','774','755','775']; // 호가 실시간 심볼([0142] 시간외단일가 현재가)		this.historyData=['0101']; //최근 화면 히스토리 데이터		this.favListIdx=0;		this.selectBoxMouseOut=true;		this.selectBoxToggle=false;		this.stockLatelyData=[{refCode:'037620',refName:'미래에셋증권'}]; //최근종목 히스토리 데이터		//his.fnoLatelyData=[{fnoCode:'101L6000',fnoName:'선물6월물(16)1'}];  //최근선물옵션 히스토리 데이터		this.fnoLatelyData=[];  //최근선물옵션 히스토리 데이터		this.tickerNewsData=[]; //티커 뉴스 데이터		this.tickerNewsIdx=0;		this.tickerJisuData1=[]; //티커 국내 지수 데이터		this.tickerJisuData2=[]; //티커 해외 지수 데이터		this.tickerJisuIdx1=0;		this.tickerJisuIdx2=0;		this.tickerJisuSelector1={}; //티커 국내 지수 셀렉터		this.tickerJisuSelector2={}; //티커 해외 지수 셀렉터		this.tickContractData=[];		this.configInfo={			normal:{				startView:{gbn:1,viewNo:''},				marketLink:true,				viewCount:5			},			news:['1','2','3','4','5','6','7','8','9','10','11','12','13'],			ticker:{				tickerViewOn:true,				jisu1:[{name:'거래소', value:'K0001'}],				jisu2:[{name:'E-Mini S&P 500(G)', value:'CME@ES'}],				historyBarViewOn:true			},			acctPwd:{},			contract:true,			order:{				okWin:{stock:true, future:true},				wonAuto:{stock:false, future:false}			}		};	};	cmmUtils.prototype = {		// 초기 이벤트 생성		initEvent:function(){			//국내지수 티커관련 seletor			this.tickerJisuSelector1.name=$("#tickerJisuName1");			this.tickerJisuSelector1.data023=$("#tickerJisu1_23");			this.tickerJisuSelector1.data024=$("#tickerJisu1_24");			this.tickerJisuSelector1.data033=$("#tickerJisu1_33");			this.tickerJisuSelector1.data027=$("#tickerJisu1_27");			//해외지수 티커관련 seletor			this.tickerJisuSelector2.name=$("#tickerJisuName2");			this.tickerJisuSelector2.data023=$("#tickerJisu2_23");			this.tickerJisuSelector2.data024=$("#tickerJisu2_24");			this.tickerJisuSelector2.data033=$("#tickerJisu2_33");			this.tickerJisuSelector2.data027=$("#tickerJisu2_27");			//this.configLoad();			//환경설정 버튼 이벤트			$("#topConfigBtn").on('click', function(){				window.cmmUtils.confingOpen();			});			//즐겨찾기, 최근화면, 최근 종목 관련 데이터 -- 추후 삭제			if( typeof parent.document.wtsFavData!='undefined' ){				this.favData=[];				for(var i=0;i<parent.document.wtsFavData.length;i++){					this.favData.push(parent.document.wtsFavData[i]);				}			}			if( typeof parent.document.wtsHistoryData!='undefined' ){				this.historyData=[];				for(var i=0;i<parent.document.wtsHistoryData.length;i++){					this.historyData.push(parent.document.wtsHistoryData[i]);				}			}			if( typeof parent.document.wtsStockLatelyData!='undefined' ){				this.stockLatelyData=[];				for(var i=0;i<parent.document.wtsStockLatelyData.length;i++){					this.stockLatelyData.push(parent.document.wtsStockLatelyData[i]);				}			}						//드랍다운 컨트롤러 기능 start			//아이템 추가 data ={item1:'값1', item2:'값2'}			$.fn.itemAdd = function(data){				var select_event=jQuery.Event('itemSelect');				var $selector_text=$(this);				var $selector=$selector_text.parent().find('.layer_sub');				if(typeof data.value == 'undefined' ||  data.value==null) {					data.value='';				}				if($selector.length>0 && $selector.hasClass('layer_sub')) {					var $ul_selector=$selector.find('ul');					if(data.item1 !== undefined && data.item2 !== undefined) {						$ul_selector.append('<li style="text-align:left" value="'+data.value+'"><strong>'+data.item1+'</strong><em>'+data.item2+'</em></li>');					} else if(data.item1 !== undefined ) {						$ul_selector.append('<li style="text-align:left" value="'+data.value+'"><strong>'+data.item1+'</strong></li>');					} else if(data.item2 !== undefined ) {						$ul_selector.append('<li style="text-align:left" value="'+data.value+'"><strong></strong><em>'+data.item2+'</em></li>');					}					var $selector_li=$selector_text.parent().find('.layer_sub li');					var $selector_li2=$($selector_li[$selector_li.length-1]);					$selector_li2.on('mouseover', function(){						$(this).css('background-color','#eaeaea');					});					$selector_li2.on('mouseout', function(){						$(this).css('background-color','#fff');					});					$selector_li2.on('click', function(){						var $this=$(this), _self=window.cmmUtils;						var data2={item1:$this.find('strong').text(), item2:$this.find('em').text(), value:String($this.attr('value'))};						$selector_text.trigger(select_event, data2);						$selector_text.parent().find('.layer_sub').hide();						_self.selectBoxMouseOut=true;						_self.selectBoxToggle=false;					});				}else{					var add_data='';					if(data.item1 !== undefined && data.item2 !== undefined) {						add_data='<li style="text-align:left" value="'+data.value+'"><strong>'+data.item1+'</strong><em>'+data.item2+'</em></li>';					} else if(data.item1 !== undefined ) {						add_data='<li style="text-align:left" value="'+data.value+'"><strong>'+data.item1+'</strong></li>';					} else if(data.item2 !== undefined ) {						add_data='<li style="text-align:left" value="'+data.value+'"><strong></strong><em>'+data.item2+'</em></li>';					}					var $parent=$selector_text.parent();					$parent.append('<div class="layer_sub" style="display:none"><ul>'+add_data+'</ul></div>');					$parent.find('.layer_sub').off('mouseover').on('mouseover', function(){						window.cmmUtils.selectBoxMouseOut=false;					});					$parent.find('.layer_sub').off('mouseout').on('mouseout', function(){						window.cmmUtils.selectBoxMouseOut=true;					});					$parent.find('.layer_sub li').off('mouseover').on('mouseover', function(){						$(this).css('background-color','#eaeaea');					});					$parent.find('.layer_sub li').off('mouseout').on('mouseout', function(){						$(this).css('background-color','#fff');					});					$parent.find('.layer_sub li').off('click').on('click', function(){						var $this=$(this), _self=window.cmmUtils;						var data2={item1:$this.find('strong').text(), item2:$this.find('em').text(), value:String($this.attr('value'))};						$selector_text.trigger(select_event, data2);						$selector_text.parent().find('.layer_sub').hide();						_self.selectBoxMouseOut=true;						_self.selectBoxToggle=false;					});					$parent.find('.layer_sub').off('mouseover').on('mouseover', function(){						window.cmmUtils.selectBoxMouseOut=false;					});					$parent.find('.btn_recent').off('click').on('click', function(){						var $this=$(this), _self=window.cmmUtils;						var $select_obj=$this.parent().find('.layer_sub');						if(!_self.selectBoxToggle){							$select_obj.show();							setTimeout(function(){								window.cmmUtils.selectBoxToggle=true;							},200);														var $select_li_obj=$select_obj.find('li');							$select_li_obj.each(function(){								$this.css('cursor','pointer');							});						} else {							$select_obj.hide();							_self.selectBoxMouseOut=true;							_self.selectBoxToggle=false;						}					});				}			};			//리스트 삭제 기능 있는 아이템 추가 data ={item1:'값1', item2:'값2'}			$.fn.itemAddX = function(data){				var select_event=jQuery.Event('itemSelect');				var del_event=jQuery.Event('itemDel');				var btnClick_event=jQuery.Event('btnClick');				var $selector_text=$(this);				var $selector_parent=$selector_text.parent();				var $selector=$selector_text.parent().find('.layer_newest');				if(typeof data.value == 'undefined' ||  data.value==null) {					data.value='';				}				if($selector.length>0 && $selector.hasClass('layer_newest')) {					var $ul_selector=$selector.find('ul');					if(data.item1 !== undefined && data.item2 !== undefined) {						$ul_selector.append('<li value="'+data.value+'"><strong>'+data.item1+'</strong><em>'+data.item2+'</em><input type="button" value="삭제후닫기"></li>');					} else if(data.item1 !== undefined ) {						$ul_selector.append('<li value="'+data.value+'"><strong>'+data.item1+'</strong><input type="button" value="삭제후닫기"></li>');					} else if(data.item2 !== undefined ) {						$ul_selector.append('<li value="'+data.value+'"><strong></strong><em>'+data.item2+'</em><input type="button" value="삭제후닫기"></li>');					}					var $selector_li=$selector_text.parent().find('.layer_newest li');					var $selector_li2=$($selector_li[$selector_li.length-1]);					$selector_li2.on('mouseover', function(){						$(this).css('background-color','#eaeaea');					});					$selector_li2.on('mouseout', function(){						$(this).css('background-color','#fff');					});					var $selector_btn=$selector_li2.find('[type=button]');					$selector_btn.on('click',function(){						var $this=$(this);						var $parent=$this.parent();						var data2={gbn:'', item1:$parent.find('strong').text(), item2:$parent.find('em').text(), value:String($this.attr('value'))};						//$(this).parent().remove();						$selector_text.trigger(del_event, data2);					});					$selector_li2.on('click', function(){						var $this=$(this);						var _self=window.cmmUtils;						var data={item1:$this.find('strong').text(), item2:$this.find('em').text()};						$selector_text.trigger(select_event, data);						$selector_parent.find('.layer_newest').hide();						_self.selectBoxMouseOut=true;						_self.selectBoxToggle=false;					});				}else{					var add_data='';					if(data.item1 !== undefined && data.item2 !== undefined) {						add_data='<li value="'+data.value+'"><strong>'+data.item1+'</strong><em>'+data.item2+'</em><input type="button" value="삭제후닫기"></li>';					} else if(data.item1 !== undefined ) {						add_data='<li value="'+data.value+'"><strong>'+data.item1+'</strong><input type="button" value="삭제후닫기"></li>';					} else if(data.item2 !== undefined ) {						add_data='<li value="'+data.value+'"><strong></strong><em>'+data.item2+'</em><input type="button" value="삭제후닫기"></li>';					}					$selector_parent.append('<div class="layer_newest" style="display:none"><ul>'+add_data+'</ul><button name="allDelX">전체삭제</button></div>');					var $selector_btn=$selector_parent.find('.layer_newest li').find('[type=button]');					$selector_btn.on('click',function(){						var data2={gbn:'', item1:$(this).parent().find('strong').text(), item2:$(this).parent().find('em').text(), value:String($(this).attr('value'))};						//$(this).parent().remove();						$selector_text.trigger(del_event, data2);					});					var $layer_newest=$selector_parent.find('.layer_newest');					var $layer_newest_li=$layer_newest.find('li');					$layer_newest.find('[name=allDelX]').on('click',function(){						var data2={gbn:'all', item1:'', item2:''};						$selector_text.trigger(del_event, data2);					});					$layer_newest.off('mouseover').on('mouseover', function(){						window.cmmUtils.selectBoxMouseOut=false;					});					$layer_newest.off('mouseout').on('mouseout', function(){						window.cmmUtils.selectBoxMouseOut=true;					});					$layer_newest_li.off('mouseover').on('mouseover', function(){						$(this).css('background-color','#eaeaea');					});					$layer_newest_li.off('mouseout').on('mouseout', function(){						$(this).css('background-color','#fff');					});					$layer_newest_li.off('click').on('click', function(){						var $this=$(this), _self=window.cmmUtils;						var data={item1:$this.find('strong').text(), item2:$this.find('em').text()};						$selector_text.trigger(select_event, data);						$selector_parent.find('.layer_newest').hide();						_self.selectBoxMouseOut=true;						_self.selectBoxToggle=false;					});					$layer_newest.off('mouseover').on('mouseover', function(){						window.cmmUtils.selectBoxMouseOut=false;					});					$selector_parent.find('.btn_recent').off('click').on('click', function(){						var $this=$(this), _self=window.cmmUtils;						$selector_text.trigger(btnClick_event);						var $select_obj=$this.parent().find('.layer_newest');						if(!_self.selectBoxToggle){							$select_obj.show();							setTimeout(function(){								window.cmmUtils.selectBoxToggle=true;							},200);														var $select_li_obj=$select_obj.find('li');							$select_li_obj.each(function(){								$this.css('cursor','pointer');							});						} else {							$select_obj.hide();							_self.selectBoxMouseOut=true;							_self.selectBoxToggle=false;						}					});				}			};			//아이템 삭제			$.fn.itemDel = function(data){				var $selector=$(this).parent().find('.layer_sub');				if($selector.length>0 && $selector.hasClass('layer_sub')) {					var $li_selector=$selector.find('li');					for(var i=0, len=$li_selector.length;i<len;i++) {						var $li=$($li_selector[i]);						var li_data={item1:$li.find('strong').text(), item2:$li.find('em').text()};						if(data.item1==li_data.item1) {							$li.remove();							break;						}					}					if($selector.find('li').length==0) {						$selector.remove();					}				}			};			//리스트에 삭제기능 있는 아이템 삭제			$.fn.itemDelX = function(data){				var $selector=$(this).parent().find('.layer_newest');				if($selector.length>0 && $selector.hasClass('layer_newest')) {					var $li_selector=$selector.find('li');					for(var i=0, len=$li_selector.length;i<len;i++) {						var $li=$($li_selector[i]);						var li_data={item1:$li.find('strong').text(), item2:$li.find('em').text()};						if(data.item1==li_data.item1 && data.item2==li_data.item2) {							$li.remove();							break;						}					}					if($selector.find('li').length==0) {						$selector.remove();					}				}			};						//전체 삭제			$.fn.itemAllDelX = function(){				var $selector=$(this).parent().find('.layer_newest');				if($selector.length>0 && $selector.hasClass('layer_newest')) {					$selector.remove();				}			};			//전체 삭제			$.fn.itemAllDel = function(){				var $selector=$(this).parent().find('.layer_sub');				if($selector.length>0 && $selector.hasClass('layer_sub')) {					$selector.remove();				}			};			//드랍다운 컨트롤러 기능 end						//WTS Body 클릭시 이벤트 처리			$("body").on('click',function(){				var display=$("#topAllMenu").css('display');				var _self=window.cmmUtils;				if(!_self.topFavMenuBtnToggle && display!='none') {					_self.topFavHistoryShow=false;					_self.topMenuShow=false;					$("#topAllMenu").slideUp(300);				}				if(_self.selectBoxToggle && _self.selectBoxMouseOut) {					setTimeout(function(){						window.cmmUtils.selectBoxToggle=false;					},200);					$('.search_area .layer_sub').hide();					$('.search_area .layer_newest').hide();				}			});			//펼친 전체메뉴 DIV 클릭시 이벤트 처리			$("#topAllMenu").on('click',function(){				window.cmmUtils.topFavMenuBtnToggle=true;				setTimeout(function(){					window.cmmUtils.topFavMenuBtnToggle=false;				},500);			});			//펼친 전체메뉴에서 닫기 버튼 클릭시 이벤트 처리			$(document).on('click', '#allMenuCloseBtn', function(){				$("#topAllMenu").slideUp(300);			});			//상단 전체메뉴 버튼 클릭시			$("#allMenuBtn").on('click',function(){				var _self=window.cmmUtils;				var $top_all_menu=$("#topAllMenu");				_self.topFavMenuBtnToggle=true;				var display=$top_all_menu.css('display');				if(_self.topFavHistoryShow || display=='none') {					_self.topFavHistoryShow=false;					_self.topMenuShow=true;					$top_all_menu.html(_self.topMenuHtml);					$top_all_menu.slideDown(300);				} else {					_self.topMenuShow=false;					$top_all_menu.slideUp(300);				}				setTimeout(function(){					window.cmmUtils.topFavMenuBtnToggle=false;				},500);			});			//상단 즐겨찾기 버튼 클릭시			$("#favHistoryBtn").on('click',function(){				var _self=window.cmmUtils;				var $top_all_menu=$("#topAllMenu");				_self.topFavMenuBtnToggle=true;				var display=$top_all_menu.css('display');				if(_self.topMenuShow || display=='none') {					_self.topMenuShow=false;					_self.topFavHistoryShow=true;					_self.favHistoryCreate();					$("#topAllMenu div[name=tabs]").tabs();					$top_all_menu.slideDown(300);				} else {					_self.topFavHistoryShow=false;					$top_all_menu.slideUp(300);				}				setTimeout(function(){					window.cmmUtils.topFavMenuBtnToggle=false;				},500);			});			//상단 즐겨찾기 업 버튼			$('#favUpBtn').on('click', function(){				var _self=window.cmmUtils;				if(_self.favListIdx==0) {					return;				}				_self.favListIdx--;				_self.favListCreate();			});			//상단 즐겨찾기 다운 버튼			$('#favDownBtn').on('click', function(){				var _self=window.cmmUtils;				var max=(_self.favListIdx+1)*8;				if(_self.favData.length<=max) {					return;				}				_self.favListIdx++;				_self.favListCreate();			});			//상단 화면번호 입력창 최근화면정보 드랍다운 생성			var $scno=$('#scno');			for(var i=0, len=this.historyData.length;i<len;i++){				var data=this.getMenuInfo(this.historyData[i]);				$scno.itemAdd({item2:'',item1:'['+data.viewName+'] '+data.selectMenuName, value:'mid_'+data.viewName});			}			//상단 화면번호 입력창 최근화면정보 선택 이벤트			$scno.on('itemSelect',function(e, data){				var arr_val = data.value.split('_');				nexMdi.open({viewName:arr_val[1]});			});					},		//최근종목 로드		stockLatelyLoad:function(){			var html='';			var stock_lately_data=this.stockLatelyData;			for(var i=0, len=stock_lately_data.length;i<len;i++) {				var class_text='firstchild';				if(i>0) {					class_text='';				}				html+='<li class="'+class_text+'"><a href="javascript:void(0);" onclick="nexMdi.setAllRefCode(\''+stock_lately_data[i].refCode+'\');return false;">'+stock_lately_data[i].refName+'</a>';				html+='<button type="button" class="btn_close" onclick="cmmUtils.stockLatelyDel(\''+stock_lately_data[i].refCode+'\');">';				html+='<span class="screen_out">닫기</span></button></li>';			}			$("#stockLatelyList").html(html);		},		//최근종목 추가		stockLatelyAdd:function(refCode, refName){			var stock_lately_data=this.stockLatelyData;			for(var i=0, len=stock_lately_data.length;i<len;i++) {				if(stock_lately_data[i].refCode==refCode) {					stock_lately_data.splice(i, 1);					break;				}			}			if(stock_lately_data.length==10) {				stock_lately_data.pop();			}			stock_lately_data.unshift({refCode:refCode, refName:refName});			this.stockLatelyLoad();		},		//최근 종목 삭제		stockLatelyDel:function(refCode){			var stock_lately_data=this.stockLatelyData;			for(var i=0, len=stock_lately_data.length;i<len;i++) {				if(stock_lately_data[i].refCode==refCode) {					stock_lately_data.splice(i, 1);					break;				}			}			this.stockLatelyLoad();		},		//즐겨찾기메뉴 버튼 클릭		favBtnClick:function() {			$("#favHistoryBtn").click();		},		//최근본화면 버튼 클릭		historyBtnClick:function() {			$("#favHistoryBtn").click();			$("#topAllMenu div[name=tabs]").tabs({active:1});		},		//전체 메뉴 버튼 클릭		allMenuBtnClick:function() {			$("#allMenuBtn").click();		},		//메뉴 데이터 가져오기		getMenuInfo:function(no){			var idx=null;			for(var i=0, len=MENU_LIST.length;i<len;i++) {				if(MENU_LIST[i].no==no) {					idx=i;					break;					}			}			if(idx!=null) {				var top_menu_name=MENU_LIST[MENU_LIST[idx].topIdx].fullName;				var select_menu_name=MENU_LIST[idx].fullName;				return {topMenuName:top_menu_name, viewName:no, selectMenuName:select_menu_name};			} else {				return null;			}		},		//즐겨찾기 버튼 토글		favBtnToggle:function(vName) {			var $selector=$('#mdi'+vName+'_FavBtn');			if($selector.hasClass('not')) {				this.favListAdd(vName);				$selector.removeClass('not');			} else {				this.favListDel(vName);				$selector.addClass('not');			}		},		//즐겨찾기 삭제		favListDel:function(vName) {			this.favListIdx=0;			var fav_data=this.favData;			for(var i=0, len=fav_data.length;i<len;i++) {				if(vName==fav_data[i]) {					fav_data.splice(i, 1);					break;				}			}			this.favListCreate();			this.favHistoryCreate();			$("#topAllMenu div[name=tabs]").tabs();			$("#topAllMenu div[name=tabs]").tabs({active:0});		},		//즐겨찾기 추가		favListAdd:function(vName) {			var fav_data=this.favData;			if(fav_data.length==18) {				fav_data.pop();			}			if(fav_data.indexOf(vName)==-1) {				fav_data.push(String(vName));				this.favListCreate();			}		},		//최근본화면 삭제		historyListDel:function(vName) {			var $scno=$('#scno');			var history_data=this.historyData;			for(var i=0, len=history_data.length;i<len;i++) {				if(vName==history_data[i]) {					history_data.splice(i, 1);					break;				}			}			this.favHistoryCreate();			$("#topAllMenu div[name=tabs]").tabs();			$("#topAllMenu div[name=tabs]").tabs({active:1});			$scno.itemAllDel();			for(var i=0, len=history_data.length;i<len;i++){				var data=this.getMenuInfo(history_data[i]);				$scno.itemAdd({item2:'',item1:'['+data.viewName+'] '+data.selectMenuName, value:'mid_'+data.viewName});			}		},		//최근본화면 추가		historyListAdd:function(vName) {			var $scno=$('#scno');			var history_data=this.historyData;			for(var i=0, len=history_data.length;i<len;i++) {				if(vName==history_data[i]) {					history_data.splice(i, 1);					break;				}			}			if(this.historyData.length==18) {				history_data.pop();			}			history_data.unshift(String(vName));				$scno.itemAllDel();			for(var i=0, len=history_data.length;i<len;i++){				var data=this.getMenuInfo(history_data[i]);				$scno.itemAdd({item2:'',item1:'['+data.viewName+'] '+data.selectMenuName, value:'mid_'+data.viewName});			}		},		//상단 즐겨찾기 생성		favListCreate:function(){			var html=[];			var i=this.favListIdx*8;			var fav_data=this.favData;			for(var idx=1, len=fav_data.length;i<len;i++,idx++) {				var data=this.getMenuInfo(fav_data[i]);				if(data!=null) {					html.push('<li>');					html.push('<button type="button" onclick="javascript:nexMdi.open({viewName:\''+data.viewName+'\'});" class="btn_st m0101">'+data.selectMenuName+'</button>');					html.push('</li>');				}				if((idx%8)==0 || idx>=fav_data.length) break;			}			$("#favList").html(html.join(''));		},		//드랍다운 메뉴 즐겨찾기 및 최근본화면 생성		favHistoryCreate:function(){			var fav_data=this.favData;			var history_data=this.historyData;			var html=[];			html.push('<div name="tabs">');			html.push('	<ul class="nav nav_tabs clearfix" role="tablist">');			html.push('		<li role="presentation" class="active" style="list-style:none !important;"><a href="#fav1" aria-controls="fav1" role="tab" data-toggle="tab">즐겨찾기<em>'+fav_data.length+'</em></a></li>');			html.push('		<li role="presentation" style="list-style:none !important;"><a href="#fav2" aria-controls="fav2" role="tab" data-toggle="tab">최근 본 화면<em>'+history_data.length+'</em></a></li>');			html.push('	</ul>');			html.push('	<div class="tab_content">');			html.push('		<div role="tabpanel" class="tab_pane active" id="fav1">');			html.push('			<div class="gnb_fav">');			var idx=0;			for(var i=0, len=fav_data.length;i<len;i++) {				if(idx==0 || ((idx%6)==0 && idx<len)) {					html.push('				<ol>');				} 				var data=this.getMenuInfo(fav_data[i]);				if(data==null) {					idx--;				} else {					idx++;					html.push('					<li>');					html.push('						<span>'+idx+'</span><a href="javascript:void(0);" onclick="nexMdi.open({viewName:\''+data.viewName+'\'});return false;">'+data.topMenuName+' > <strong>'+data.selectMenuName+'['+data.viewName+']</strong></a>');					html.push('						<input type="button" value="삭제" onclick="cmmUtils.favListDel(\''+data.viewName+'\')">');					html.push('					</li>');				}								if((idx%6)==0 || idx>=len) {					html.push('				</ol>');				}			}			html.push('			</div>');			html.push('		</div>');			html.push('		<div role="tabpanel" class="tab_pane" id="fav2">');			html.push('			<div class="gnb_fav">');			idx=0;			for(var i=0, len=history_data.length;i<len;i++) {				if(idx==0 || ((idx%6)==0 && idx<len)) {					html.push('				<ol>');				} 				var data=this.getMenuInfo(history_data[i]);				if(data==null) {					idx--;				} else {					idx++;					html.push('					<li>');					html.push('						<span>'+idx+'</span><a href="javascript:void(0);" onclick="nexMdi.open({viewName:\''+data.viewName+'\'});return false;">'+data.topMenuName+' > <strong>'+data.selectMenuName+'['+data.viewName+']</strong></a>');					html.push('						<input type="button" value="삭제" onclick="cmmUtils.historyListDel(\''+data.viewName+'\')">');					html.push('					</li>');				}								if((idx%6)==0 || idx>=len) {					html.push('				</ol>');				}			}			html.push('			</div>');			html.push('		</div>');			html.push('	</div>');			html.push('</div>');			html.push('<div class="link_group">');			html.push('	<div class="pull_left">');			html.push('		<a href="javascript:void(0);" onclick="cmmUtils.allMenuBtnClick();return false;"><strong>트레이딩</strong> 메뉴보기</a>');			html.push('	</div>');			html.push('	<div class="pull_right">');			html.push('		<input class="gnb_close" type="button" id="allMenuCloseBtn" value="닫기">');			html.push('	</div>');			html.push('</div>');			$("#topAllMenu").html(html.join(''));		},		//드랍다운 전체메뉴 생성		topMenuCreate:function(){			var top_menu1=[];			var top_menu2=[];			var top_menu3=[];			for(var i=0, len=MENU_LIST.length;i<len;i++) {				if(MENU_LIST[i].depth==0)					top_menu1.push(MENU_LIST[i]);				else if(MENU_LIST[i].depth==1)					top_menu2.push(MENU_LIST[i]);				else if(MENU_LIST[i].depth==2)					top_menu3.push(MENU_LIST[i]);			}						//전체 메뉴 관련 시작부분			var menu_html=[];			menu_html.push('<ul>');			for(var i=0, len=top_menu1.length;i<len;i++) {				if(i==6)					menu_html.push('<li class="homepage"><strong>'+top_menu1[i].fullName+'</strong><ul>');				else					menu_html.push('<li><strong>'+top_menu1[i].fullName+'</strong><ul>');				for(var k=0, len1=top_menu2.length;k<len1;k++) {					if(top_menu1[i].idx==top_menu2[k].parentIdx) {						if(top_menu1[i].idx==6) {							menu_html.push('<li><a href="javascript:void(0);" onclick="parent.linkGnbMenuAndGo(\''+top_menu2[k].menuId+'\');return false;" >'+top_menu2[k].fullName+'</a></li>');						} else {							menu_html.push('<li><strong>'+top_menu2[k].fullName+'</strong><ul>');						}												for(var j=0, len2=top_menu3.length;j<len2;j++) {							if(top_menu2[k].idx==top_menu3[j].parentIdx) {								menu_html.push('<li><a href="javascript:void(0);" onclick="nexMdi.open({viewName:\''+top_menu3[j].no+'\'});return false;">'+top_menu3[j].fullName+'</a></li>');							}						}						if(top_menu1[i].idx!=6)							menu_html.push('</ul>');					}				}				menu_html.push('</ul>');			}			menu_html.push('</ul>');			menu_html.push('<div class="link_group">');			menu_html.push('<div class="pull_left">');			menu_html.push('<a href="javascript:void(0);" onclick="cmmUtils.favBtnClick();return false;"><strong>즐겨찾기</strong> 보기</a>');			menu_html.push('<a href="javascript:void(0);" onclick="cmmUtils.historyBtnClick();return false;"><strong>최근본 화면</strong> 보기</a>');			menu_html.push('</div>');			menu_html.push('<div class="pull_right">');			menu_html.push('<input class="gnb_close" id="allMenuCloseBtn" type="button" value="닫기">');			menu_html.push('</div>');			menu_html.push('</div>');			this.topMenuHtml=menu_html.join('');		},		//주문관련 함수		getTickPrice:function(refCode, price, upDown) {			var master_code=MasterCode;			var market_kind=this.getMarket(refCode);			var f_price = Math.abs(price);			var rtn_value=0.0;			if(!upDown)				f_price = f_price-1;			switch(market_kind) {				case this.CODE_JONGMOK_D :					var data=this.getJongmok(refCode, master_code.ETN);					if(data == null) {						data=this.getJongmok(refCode, master_code.ETF);					}					if(data!=null) {						rtn_value=5;					} else {						if( f_price < 1000 )			rtn_value =    1;						else if ( f_price < 5000 )		rtn_value =    5;						else if ( f_price < 10000 )		rtn_value =   10;						else if ( f_price < 50000 )		rtn_value =   50;						else if ( f_price < 100000 )	rtn_value =  100;						else if ( f_price < 500000 )	rtn_value =  500;						else							rtn_value = 1000;					}					break;				case this.CODE_KJONGMOK_D  :					if( f_price      < 1000  )	rtn_value =   1;					else if (f_price < 5000  )	rtn_value =   5;					else if (f_price < 10000 )	rtn_value =  10;					else if (f_price < 50000 )	rtn_value =  50;					else						rtn_value = 100;					break;				case this.CODE_ETFJONGMOK_D  :					rtn_value=5;					break;				case this.CODE_ETNJONGMOK_D  :					rtn_value=5;					break;				case this.CODE_OTCBB_D  :					if( f_price < 1000 )		rtn_value = 1;					else if( f_price < 5000 )	rtn_value = 5;					else if( f_price < 10000 )	rtn_value = 10;					else if( f_price < 50000 )	rtn_value =   50;					else if( f_price < 100000 )	rtn_value =  100;					else if( f_price < 500000 )	rtn_value =  500;					else						rtn_value = 1000;					break;				case this.CODE_ELW_D  :					if( f_price < 5000 )		rtn_value = 5;					else if( f_price < 10000 )	rtn_value = 10;					else if( f_price < 50000 )	rtn_value = 50;					else if( f_price < 100000 )	rtn_value = 100;					else if( f_price < 500000 )	rtn_value = 500;					else						rtn_value = 1000;					break;				case this.CODE_GOLDSPOT_D :					rtn_value = 10;					break;				case this.CODE_KQ150FUT_D :					rtn_value = 0.1;					break;				case this.CODE_FUTURE_D :				case this.CODE_SPREAD_D :					rtn_value = 0.05;					var data=this.getJongmok(refCode, master_code.FUTURE);					if(data != null) {						if(data.FSGB == '3' || data.FSGB == '4' || data.FSGB == '5' || data.FSGB == '6' || data.FSGB == '7' || data.FSGB == '8' || data.FSGB == 'A' || data.FSGB == 'B' || data.FSGB == 'C')							rtn_value = 0.20;					} else {						data=this.getJongmok(refCode, master_code.MINIFUTURE);						if(data !=null) {							rtn_value = 0.02;						}					}					break;				case this.CODE_OPTION_D :					if( f_price < 10.00 )						rtn_value = 0.01;					else						rtn_value = 0.05;					break;				case this.CODE_MOPTION_D :					if( f_price < 3.00 )						rtn_value = 0.01;					else if( f_price < 10.00 )						rtn_value = 0.02;					else						rtn_value = 0.05;					break;				default :					if( f_price      < 1000   )	rtn_value =    1;					else if( f_price < 5000   )	rtn_value =    5;					else if( f_price < 10000  )	rtn_value =   10;					else if( f_price < 50000  )	rtn_value =   50;					else if( f_price < 100000 )	rtn_value =  100;					else if( f_price < 500000 )	rtn_value =  500;					else						rtn_value = 1000;					break;			}			return rtn_value;		},		//마켓종류 가져오기		getMarket:function(refCode) {			var master_code=MasterCode;			var isEng=true;			var data=null;			var reg=/^[0-9]+$/g;			if(reg.test(refCode)) {				isEng=false;			}			if((refCode.length==6 && !isEng) || refCode.length>=7) { //STOCK & GOLD				data=this.getJongmok(refCode, master_code.GOLD);					if(data == null) {					data=this.getJongmok(refCode, master_code.STOCK);				} else {					return this.CODE_GOLDSPOT_D;				}				if(data != null) {					if(data.ITM_DV=='10' && data.BLG_DV=='5') {						return this.CODE_SUIK_D;					} else if(data.ITM_DV=='00' && data.BLG_DV=='7') {						return this.CODE_INSU_D;					}					if(data.ITM_DV=='00') {						return this.CODE_JONGMOK_D;					} else if(data.ITM_DV=='10'){						return this.CODE_KJONGMOK_D;					}					if(data.ITM_DV=='30') {						return this.CODE_OTCBB_D;					} else if(data.BLG_DV=='11') {						return this.CODE_ELW_D;					}				}			} else if(refCode.length==6 && isEng) { //ELW				data=this.getJongmok(refCode, master_code.ELW);				if(data==null)					return -2;				else					return this.CODE_ELW_D;			} 						if(refCode.length==7) { //ETN & ETF				data=this.getJongmok(refCode, master_code.ETN);				if(data == null) {					data=this.getJongmok(refCode, master_code.ETF);				} else {					return this.CODE_ETNJONGMOK_D;				}				if(data!=null) {					return this.CODE_ETFJONGMOK_D;				} else {					return -2;				}			} 						if(refCode.length==8) { //MINIFUTURE & FUTURE & MINIOPTION & OPTION				data=this.getJongmok(refCode, master_code.FUTURE);				if(data == null) {					data=this.getJongmok(refCode, master_code.MINIFUTURE);				}				if(data != null) {					if(data.FSGB!='1') {						if(refCode.substring(3)=='00000') {							return this.CODE_LOPTION_D;						} else if(refCode.charAt(0)=='4') {							return this.CODE_SPREAD_D;						} else {							return this.CODE_FUTURE_D;						}					} else {						if(refCode.substring(3)=='00000') {							return this.CODE_KQ150_LFTURE_D;						} else {							return this.CODE_KQ150FUT_D;						}					}				}				data=this.getJongmok(refCode, master_code.MINIOPTION.Name);				if(data !=null) return this.CODE_MOPTION_D;				data=this.getJongmok(refCode, master_code.OPTION.Name);				if(data !=null) return this.CODE_OPTION_D;				if(data ==null) {					return -2;				}			} else {				return -2;			}		},		//종목데이터 가져오기		getJongmok :function(refCode, data) {			for(var i = data.length; i--;) {				if(data[i].ITM_CD==refCode) {					return data[i];				}			}			return null;		},		//종목데이터와 마켓값 가져오기		getJongmokData:function(refCode) {			var master_code=MasterCode;			var isEng=true;			var data=null;			var reg=/^[0-9]+$/g;			var gbn='';			if(reg.test(refCode)) {				isEng=false;			}			if((refCode.length==6 && !isEng) || refCode.length>=7) { //STOCK & GOLD				gbn='ETN';				data=this.getJongmok(refCode, master_code.ETN);								if(data == null) {					gbn='ETF';					data=this.getJongmok(refCode, master_code.ETF);				}				if(data == null) {					gbn='GOLD';					data=this.getJongmok(refCode, master_code.GOLD);				}				if(data == null) {					gbn='STOCK';					data=this.getJongmok(refCode, master_code.STOCK);				}			} else if(refCode.length==6 && isEng) { //ELW				gbn='ELW';				data=this.getJongmok(refCode, master_code.ELW);			} 						if(data==null) { //ETN & ETF				gbn='ETN';				data=this.getJongmok(refCode, master_code.ETN);				if(data == null) {					gbn='ETF';					data=this.getJongmok(refCode, master_code.ETF);				}			} 						if(data==null) { //MINIFUTURE & FUTURE & MINIOPTION & OPTION				gbn='FUTURE';				data=this.getJongmok(refCode, master_code.FUTURE);				if(data == null) {					gbn='MINIFUTURE';					data=this.getJongmok(refCode, master_code.MINIFUTURE);				}				if(data == null) {					gbn='MINIOPTION';					data=this.getJongmok(refCode, master_code.MINIOPTION.Name);				}					if(data == null) {					gbn='OPTION';					data=this.getJongmok(refCode, master_code.OPTION.Name);				}				} 			if(data==null)				return null;			else {				var nm='';				if(gbn=='MINIOPTION' || gbn=='OPTION') {					nm=data.ITMN;					nm=nm.replaceAll('=','');					nm=nm.replaceAll('%','');					nm=nm.replaceAll('/','');					data.ITMN=nm;				} else {					nm=data.KOR_ITMN;					nm=nm.replaceAll('=','');					nm=nm.replaceAll('%','');					nm=nm.replaceAll('/','');					data.KOR_ITMN=nm;				}				return {gbn:gbn, value:data};			}		},		//관심종목 트리 조건별로 종목데이터 추출		getRefCodeList : function(data){			var ref_codes=[];			var ref_code_name=[];			var gubns = ['ITM_DV','CPTLP', 'BUCL_MDIV', 'BUCL_SDIV', 'SPV_STR_SPRTC_YN', 'FLR', 'SPV_STR_DV','K200_KOSDQ_DV','BLG_DV', 'PREMIER', 'FSGB','UYCD','TMCD'];			var has_gubns = [];			for(var i=gubns.length;i--;){				if(data[gubns[i]] !== undefined){					has_gubns.push(gubns[i]);				}			}			for(var i=data.market.length;i--;) {				var code_list=MasterCode[data.market[i]];				for(var k=code_list.length;k--;) {										//var ref_codes_check=false;					//for(var h=ref_codes.length;h--;) {					//	if(ref_codes[h]==code_list[k].ITM_CD) {					//		ref_codes_check=true;					//		break;					//	}					//}										//if(!ref_codes_check) {						var has_gubns_check = false;												for(var j=has_gubns.length;j--;) {														var _has_gubns=has_gubns[j];							var _code_list=code_list[k][_has_gubns];							if(_code_list !== undefined) {								var arr_data=data[_has_gubns];								if($.isArray(arr_data)) {									var arr_check=false;																											for(var m=arr_data.length;m--;) {										if(arr_data[m]==_code_list) {											arr_check=true;											break;										}									}																		has_gubns_check = arr_check;								} else {									if(_code_list==arr_data) {										has_gubns_check = true;									} else{										has_gubns_check = false;										break;									}								}							}						}						if(has_gubns_check) {							var nm='';							var itmn=code_list[k].ITMN, kor_itmn=code_list[k].KOR_ITMN;							if(itmn !== undefined) {								nm=itmn;								nm=nm.replaceAll('=','');								nm=nm.replaceAll('%','');								nm=nm.replaceAll('/','');								nm=nm.replaceAll('*','');							} else if(kor_itmn !== undefined) {								nm=kor_itmn;								nm=nm.replaceAll('=','');								nm=nm.replaceAll('%','');								nm=nm.replaceAll('/','');								nm=nm.replaceAll('*','');							}							var itm_cd=code_list[k].ITM_CD;							ref_codes.push(itm_cd);							ref_code_name.push({refCode:itm_cd, refName:nm});						}					//}				}			}			var rtn_data={codes:ref_codes, codeNames:ref_code_name};			return rtn_data;		},		//주문 금액리스트		getPriceList : function(refCode, upPrice, downPrice) {			var rtn_data=[];			rtn_data.push(upPrice);			var price=upPrice;			while(true) {				price-=this.getTickPrice(refCode, price, false);				rtn_data.push(price);				if(downPrice>=price)					break;			}			return rtn_data;		},					convShortSignParam  : function (trNm, object) {			var resultData = trNm + "|";			var resultsArr = [];			for (var p in object) {				var value = object[p];				if (value) {					resultsArr.push(value);				}			}			return resultData + resultsArr.join('|');		},				//종목데이터 세팅		setJongmokData : function(refCode, vName) {			var jongmok_data=this.getJongmokData(refCode);			if(jongmok_data!=null) {				var nm='';				if(jongmok_data.gbn=='MINIOPTION' || jongmok_data.gbn=='OPTION') {					nm=jongmok_data.value.ITMN;				} else {					nm=jongmok_data.value.KOR_ITMN;				}				var $ref_code=$("#mdi"+vName+" .search_area input[name=refCode]");				$("#mdi"+vName+" .search_area input[name=refName]").val(nm);								this.stockLatelyAdd(refCode, nm);								//최근종목 드랍다운 세팅				$ref_code.itemAllDelX();				var stock_lately_data=this.stockLatelyData;				for(var i=0, len=stock_lately_data.length;i<len;i++) {					$ref_code.itemAddX({item1:stock_lately_data[i].refName,item2:stock_lately_data[i].refCode});				}				$ref_code.off('btnClick').on('btnClick', function(){					var $this=$(this), stock_lately_data=window.cmmUtils.stockLatelyData;					$this.itemAllDelX();					for(var i=0, len=stock_lately_data.length;i<len;i++) {						$this.itemAddX({item1:stock_lately_data[i].refName,item2:stock_lately_data[i].refCode});					}				});				$ref_code.off('itemSelect').on('itemSelect',function(e, data){					var v_name=vName;					nexMdi.setAllRefCode(data.item2, v_name);									});				$ref_code.off('itemDel').on('itemDel',function(e, data){					var $this=$(this), _self=window.cmmUtils;					if(data.gbn=='all') {						$this.itemAllDelX();						_self.stockLatelyData=[];						_self.stockLatelyLoad();					} else {						$this.itemDelX({item1:data.item1, item2:data.item2});						_self.stockLatelyDel(data.item2);					}				});				return true;			} else {				return false;			}		},		setJongmokData2 : function(refCode, vName, refCodeName, refNameName) {			var self=window.cmmUtils;			var jongmok_data=this.getJongmokData(refCode);			if(jongmok_data!=null) {				var nm='';				if(jongmok_data.gbn=='MINIOPTION' || jongmok_data.gbn=='OPTION') {					nm=jongmok_data.value.ITMN;				} else {					nm=jongmok_data.value.KOR_ITMN;				}								var $ref_code=$("#mdi"+vName+" .search_area input[name="+refCodeName+"]");				$("#mdi"+vName+" .search_area input[name="+refNameName+"]").val(nm);								this.stockLatelyAdd(refCode, nm);								//최근종목 드랍다운 세팅				$ref_code.itemAllDelX();				var stock_lately_data=this.stockLatelyData;				for(var i=0, len=stock_lately_data.length;i<len;i++) {					$ref_code.itemAddX({item1:stock_lately_data[i].refName,item2:stock_lately_data[i].refCode});				}				$ref_code.off('btnClick').on('btnClick', function(){					var _self=window.cmmUtils;					var $this=$(this);					$this.itemAllDelX();					var _stock_lately_data=_self.stockLatelyData;					for(var i=0, len=_stock_lately_data.length;i<len;i++) {						$this.itemAddX({item1:_stock_lately_data[i].refName,item2:_stock_lately_data[i].refCode});					}				});				$ref_code.off('itemSelect').on('itemSelect',function(e, data){					nexMdi.setRefCodeName(data.item2, vName, refCodeName, refNameName);					$ref_code.trigger('change');				});				$ref_code.off('itemDel').on('itemDel',function(e, data){					var _self=window.cmmUtils;					var $this=$(this);					if(data.gbn=='all') {						$this.itemAllDelX();						_self.stockLatelyData=[];						_self.stockLatelyLoad();					} else {						$this.itemDelX({item1:data.item1, item2:data.item2});						_self.stockLatelyDel(data.item2);					}				});				return true;			} else {				return false;			}		},		//주문관련 공통 함수		getPiboChck : function( PriceType , tradeType, OrderQty, OrderPrice , buySell , piboValue  , Item_no)		{			//ExternalInterface.call("alert", "PriceType : " + PriceType + " tradeType : " + tradeType + " OrderQty : " + OrderQty + " OrderPrice : " + OrderPrice + " buySell " + buySell + "tradeType_sub " + tradeType_sub)			var qty  = Number(OrderQty.replaceAll(",","")); //앞에서 넘어온 콤마를 제거 합니다.			var price = Number(OrderPrice.replaceAll(",","")); //			//지정가(보통) 일때			if ( PriceType == "1" )	{ 				if ( tradeType == "STOCK" || tradeType == "ELW" || tradeType == "ETF" || tradeType == "ETN" || tradeType == "GOLD"){					return this.checkTrade( tradeType , qty , Number( price ) , piboValue , Item_no);				} else 	{					return this.checkTrade( tradeType , qty , Number( OrderPrice ) , piboValue , Item_no);  //옵션이나 선물이면 소수점이 들어온다. 그래서 10만원을 곱하면 자리수가 하나 증가한다. 따라서 그냥 넣는다.				}			} else {  //지정가 이외의 것들(시장가, 최유리지정...)				if ( tradeType == "STOCK"  || tradeType == "ELW" || tradeType == "ETF" || tradeType == "ETN" || tradeType == "GOLD")	{					// 변경된 착오주문방지 로직은 주문단가가 0일 때, 매매구분에 상관없이 기준가로 계산한다.					if (true) {// Number( price ) == 0  price가 화면에서 따로 넘어오는경우가 존재하여 강제로 True 셋팅						//금액은 기준가로 입력한다.						return this.checkTrade( tradeType , qty , Number( piboValue.standStValue ) , piboValue , Item_no);					}else {						if (tradeType == "STOCK" || tradeType == "ETN" || tradeType == "GOLD") {							if ( buySell == "1" ) {          //매수일때 2302								return this.checkTrade( tradeType , qty , Number( piboValue.highValue ) , piboValue , Item_no); //금액은 상한가로 입력한다.							} else if  ( buySell == "2" ) {          //매도일때 2303								return this.checkTrade( tradeType , qty , Number( piboValue.lowValue ) , piboValue , Item_no); //금액은 하한가로 입력한다.							}						} else if ( tradeType == "ELW" ) {							return this.checkTrade( tradeType , qty , Number( price ) , piboValue , Item_no);						}					}				} else if ( tradeType == "FUTURE" )	{					return this.checkTrade( tradeType , qty , price , piboValue , Item_no);				} else if ( tradeType == "OPTION" )	{					//값이 있다					if (typeof piboValue.standValue !=  "undefined" || piboValue.standValue != "") {						/*						옵션 수정할려면 코드를 받아야 할 터인데...						옵션 3, 4, 5, 6 월 물에 대해서는 승수가 10만원						그외에는 50만원으로 계산하시면 됩니다. 						즉, 						종목코드 중간에 G3, G4, G5, G6 에대해서 10만원						그외에는 50만원						이렇게 생각하시면 될것 같아요~						*/						var optionPrice  = 0;						if (item_no.substr(3, 2) == "G3" ||	item_no.substr(3, 2) == "G4" ||	item_no.substr(3, 2) == "G5" ||	item_no.substr(3, 2) == "G6") {							optionPrice = 100000;						} else {							optionPrice = 500000;						}						if ( ( qty * Number( piboValue.standValue ) * optionPrice) > 2000000000 ) {    //옵션일 경우 기준가 // 40347							return { "_result":"ERROR", "_resultMessage":"주문금액이 20억을 초과하였습니다. "};						} else {							return { "_result":"OK"};						}					} else {//값이 없다.					}				} else if ( tradeType == "SPREAD" )	{					return this.checkTrade( tradeType , qty , price , piboValue , Item_no);				}			}		},		//주문관련 공통함수		checkTrade : function ( tradeType , OrderQty , OrderPrice , piboValue , Item_no  )		{			if ( tradeType == "STOCK"  || tradeType == "ELW" || tradeType == "ETF" || tradeType == "ETN"  || tradeType == "GOLD") {				if (tradeType == "STOCK" || tradeType == "ETN" || tradeType == "ETF")	{					if(tradeType == "STOCK" && Item_no.substring(0,1) =="J"){						if ( ( OrderQty * OrderPrice)  > 200000000) {							//type 1 : 2억원 초과   							return { "_result":"ERROR", "_resultMessage":"주문금액이 2억을 초과하였습니다."};						}else{							//조건이 아닌 정상주문이면 ok							return { "_result":"OK"};						}					}else{						if ( ( OrderQty * OrderPrice)  > 2000000000) {							//type 1 : 20억원 초과   							return { "_result":"ERROR", "_resultMessage":"주문금액이 20억을 초과하였습니다."};						} else if ( (OrderQty >  Number( piboValue.totalStock ) / 100 ) ) { //상장 주식수  1334							//type 2 : 상장주식수 초과 							return { "_result":"ERROR", "_resultMessage":"주문수량이 상장주식수의 1%를 초과하였습니다. "};						} else {							//조건이 아닌 정상주문이면 ok							return { "_result":"OK"};						}					}				} else if(tradeType == "GOLD") {					if ( ( OrderQty * OrderPrice) > 200000000) {						return { "_result":"ERROR", "_resultMessage":"주문금액이 2억을 초과하였습니다. "};					} else {						return { "_result":"OK"};					}				} else {					if ( ( OrderQty * OrderPrice) > 2000000000)	{						return { "_result":"ERROR", "_resultMessage":"주문금액이 20억을 초과하였습니다. "};					} else {						return { "_result":"OK"};					}				}  			} else if ( tradeType == "FUTURE" ) {				if ( OrderQty > 300 ) {					//type 3 : 300계약 초과					return { "_result":"ERROR", "_resultMessage":"주문수량이 300계약을 초과하였습니다."};									}else if(Item_no.substring(0,1) =="4"){//종목코드 첫자리가 4일경우 선물 스프레드 주문 					if (piboValue.standValue + 2.50  < OrderPrice) {						return { "_result":"ERROR", "_resultMessage":"주문수량이 50틱을 초과하였습니다."};					}else if (piboValue.standValue - 2.50  > OrderPrice) {						return { "_result":"ERROR", "_resultMessage":"주문수량이 50틱을 초과하였습니다."};					} else {						return { "_result":"OK"};   					}				}else{					return { "_result":"OK"};				}			} else if (tradeType == "OPTION" )	{				var optionPrice = 0;				if (item_no.substr(3, 2) == "G3" ||	item_no.substr(3, 2) == "G4" ||	item_no.substr(3, 2) == "G5" ||	item_no.substr(3, 2) == "G6") {					optionPrice = 100000;				} else {					optionPrice = 500000;				}				if (OrderQty * OrderPrice * optionPrice > 2000000000) {					return { "_result":"ERROR", "_resultMessage":"주문금액이 20억을 초과하였습니다."};				} else {					return { "_result":"OK"};				}			} else if (tradeType == "SPREAD") {				if (OrderPrice + 2.55  > OrderPrice) {					return { "_result":"ERROR", "_resultMessage":"주문수량이 50틱을 초과하였습니다."};				}				if (OrderPrice - 2.55  < OrderPrice) {					return { "_result":"ERROR", "_resultMessage":"주문수량이 50틱을 초과하였습니다."};				} else {					return { "_result":"OK"};   				}			} else	{				return { "_result":"OK"};  			}		},		//환경설정창 오픈함수		confingOpen : function(gbn) {			if(gbn === undefined || gbn === null || gbn.trim() == '')				gbn='';			var option = {viewName:'x0001', parentName:'', position:'screen-center', bgClickHide:false, x:-250, y:-230, value:gbn};			nexDialog.open(option);		},		//하단 티커 데이터 로드		tickerLoad : function(){			clientSocket.pushViewOff('main','main');			if(!this.configInfo.ticker.tickerViewOn) {				return;			}			var gubn_data='';			var subg_data='';			var new_code_data = NewsDataCode.vndr.slice(0);						new_code_data.sort(function(a,b){				if(Number(a.val) > Number(b.val)) return 1;				if(Number(a.val) < Number(b.val)) return -1;				return 0;			});						var config_info_news=this.configInfo.news;			for(var i=0, len=new_code_data.length;i<len;i++) {				var chk=false;				for(var k=0, len1=config_info_news.length;k<len1;k++) {					if(new_code_data[i].code==config_info_news[k]) {						gubn_data+='1';						chk=true;						break;					}				}				if(!chk) {					gubn_data+='0';					subg_data+='0000000000000000000000000';				} else {					subg_data+='1111111111111111111111111';				}			}			var param = {				codx : '',				date : nexUtils.getDate(),				dirf : 'X',				gubn : gubn_data,				subg : subg_data,				vend : '0',				seqn : '0',				desc : ''			}							nexAjax.send({				url: '/tr/pinotitl.jsp', 				param: param,				dataType: 'json',				secure : true,				callback: function(data) {					var grid_data = data.list;					if(grid_data.length != 0) {						var colls = ['gcod2','gdate','gtitl','gsour','gseqn','gvend'];						var data_value = nexMdi.dataMapper(grid_data, colls);						window.cmmUtils.tickerNewsData=data_value;					}					var enc_text=encodeURIComponent(nexUtils.htmlSpecialChars(data_value[0][2]));					var text='<a href="javascript:void(0);" onclick="cmmUtils.tickerNewsDetailOpen(\''+data_value[0][0]+'\',\''+data_value[0][1]+'\',\''+enc_text+'\',\''+data_value[0][4]+'\',\''+data_value[0][5]+'\');return false;">';					text+='['+data_value[0][3]+'] '+data_value[0][2]+'</a>';					$("#tickerNewsView").html(text);					clientSocket.rtsReg({						pName	: 'main', 						vName	: 'main', 						GUBUNS	: ['n'], 						VALUES	: ['N0001','N0000']					});											//vaalue:종목코드, date:날짜, dirf:'X/N', gubn:'111111111111111', subg:중분류 1*450, desc:검색키워드, vend:reqData.vend, seqn:reqData.seqn					clientSocket.pushNewsOn({						pName	: 'main', 						vName	: 'main', 						value	: '',						date	: nexUtils.getDate(),						dirf	: 'X',						gubn	: gubn_data,						subg	: subg_data,						vend	: '0',						seqn	: '0',						desc	: ''					});							}			});			/*				K0001 : 거래소				K2001 : 코스피200				KSTOT : KRX100				101L6000 : 선물				KQ001 : 코스닥				KQ046 : 코스닥150				106L6000 : 코스닥150선물				CME@ES E-Mini S&P 500(G)				CME@SP S&P 선물				CME@NQ E-Mini 나스닥100(G)				DJI@DJI 다우산업				SPI@SPX S&P500				NAS@IXIC 나스닥종합				HSI@HSCE 홍콩 항셍 H				SHS@000001 중국 상해 종합				USI@SOXX 필라델피아 반도체				NII@NI225 일본니케이225				TWS@TI01 대만가권				SGI@STI 싱가폴STI				HSI@HSI 홍콩 항셍				SHS@000003 중국상해B				INI@BSE30 인도 Bombey Sensitive30				SZS@399108 중국심천B			*/			var gubuns = ['K', 'V', 'J'];			//var jisu_value=['K0001','K2001','KSTOT','101L6000','KQ001','KQ046','106L6000', 'CME@ES', 'CME@SP', 'CME@NQ', 'DJI@DJI', 'SPI@SPX', 'NAS@IXIC', 'HSI@HSCE', 'SHS@000001', 'USI@SOXX', 'NII@NI225', 'TWS@TI01', 'SGI@STI', 'HSI@HSI', 'SHS@000003', 'INI@BSE30', 'SZS@399108']			var jisu_value=[];			for(var i=0, len=this.tickerJisuData1.length;i<len;i++) {				jisu_value.push(this.tickerJisuData1[i].value);			}			for(var i=0, len=this.tickerJisuData2.length;i<len;i++) {				jisu_value.push(this.tickerJisuData2[i].value);			}			clientSocket.rtsReg({				pName : 'main', 				vName : 'main', 				GUBUNS : gubuns, 				VALUES : jisu_value			});						var key = '001301';			var symbols = [						   '001021',			               '001023', // 현재가			               '001024', // 전일대비			               '001033', // 등락률			               '001027', // 거래량			               '001028', 			               '001029', // 시가			               '001030', // 고가			               '001031', // 저가						   '001034' // 저가			              ];			clientSocket.pushInterestOn({				pName	: 'main', 				vName	: 'main', 				key		: key, 				gKey	: '91303',				values	: jisu_value,				symbols	: symbols,				receive : function(data) {					var _self=window.cmmUtils;					var jisu1=_self.tickerJisuData1;					var jisu2=_self.tickerJisuData2;					var value=data.value;					for(var i=0;i<value.length;i++)  {						for(var k=0;k<jisu1.length;k++) {							if(jisu1[k].value==value[i]['001021']) {								jisu1[k].data=value[i];								break;							}						}						for(var j=0;j<jisu2.length;j++) {							if(jisu2[j].value==value[i]['001021']) {								jisu2[j].data=value[i];								break;							}						}					}					_self.tickerJisu1DataLoad();					_self.tickerJisu2DataLoad();				}			});		},		realData_K: function(data) {			//console.log('K');		},		//티커 해외 지수 실시간		realData_V: function(data) {			//지수, 대비, 등락률, 거래량(23, 24, 33, 27)			var _self=window.cmmUtils;			var arr_jisu_data=_self.tickerJisuData2;			var jisu_data=arr_jisu_data[_self.tickerJisuIdx2];			if(jisu_data.value==data.code) {				arr_jisu_data[_self.tickerJisuIdx2].data=data.value;				_self.tickerJisu2DataLoad();			} else {				var len=arr_jisu_data.length;				for(var i=len;i--;) {					if(arr_jisu_data[i].value==data.code) {						arr_jisu_data[i].data=data.value;						//window.cmmUtils.tickerJisuIdx2=i;						//window.cmmUtils.tickerJisu2DataLoad();						break;					}				}			}		},		//티커 국내 지수 실시간		realData_J: function(data) {			//지수, 대비, 등락률, 거래량(23, 24, 33, 27)			var _self=window.cmmUtils;			var arr_jisu_data=_self.tickerJisuData1;			var jisu_data=arr_jisu_data[_self.tickerJisuIdx1];			if(jisu_data.value==data.code) {				arr_jisu_data[_self.tickerJisuIdx1].data=data.value;				_self.tickerJisu1DataLoad();			} else {				var len=arr_jisu_data.length;				for(var i=len;i--;) {					if(arr_jisu_data[i].value==data.code) {						arr_jisu_data[i].data=data.value;						//window.cmmUtils.tickerJisuIdx1=i;						//window.cmmUtils.tickerJisu1DataLoad();						break;					}				}			}		},		//티커 뉴스 실시간		realData_n: function(data) {			var vndr=String(Number(data.value['046']));			var _self=window.cmmUtils;			var arr_news=_self.configInfo.news;			var arr_news_data=_self.tickerNewsData;			if(arr_news.indexOf(vndr)>-1) {				var colls=['301','047','015','045','042','046'];				var data_value=nexMdi.dataMapper(data.value, colls);				arr_news_data.unshift(data_value);				var enc_text=encodeURIComponent(nexUtils.htmlSpecialChars(data_value[2]));				var text='<a href="javascript:void(0);" onclick="cmmUtils.tickerNewsDetailOpen(\''+data_value[0]+'\',\''+data_value[1]+'\',\''+enc_text+'\',\''+data_value[4]+'\',\''+data_value[5]+'\');return false;">';				text+='['+data_value[3]+'] '+data_value[2]+'</a>';				$("#tickerNewsView")[0].innerHTML=text;				if(arr_news_data.length>30) {					arr_news_data.splice(arr_news_data.length-1, 1);				}			}		},		//티커 뉴스 상세보기		tickerNewsDetailOpen: function(codx, date, titl, seqn, vend) {			nexDialog.open({				viewName : '05010',				parentName : 'main',				value : {					codx : codx,					date : date,					titl : titl,					seqn : seqn,					vend : vend				},				bgClickHide:true,				position : 'screen-center',				x : -305,				y : -200			});		},		//티커 뉴스 다음 버튼		tickerNewsNextBtn : function() {			if(this.tickerNewsIdx<29) {				this.tickerNewsIdx++;				var data_value=this.tickerNewsData[this.tickerNewsIdx];				var enc_text=encodeURIComponent(nexUtils.htmlSpecialChars(data_value[2]));				var text='<a href="javascript:void(0);" onclick="cmmUtils.tickerNewsDetailOpen(\''+data_value[0]+'\',\''+data_value[1]+'\',\''+enc_text+'\',\''+data_value[4]+'\',\''+data_value[5]+'\');return false;">';				text+='['+data_value[3]+'] '+data_value[2]+'</a>';				$("#tickerNewsView").html(text);			}		},		//티커 뉴스 이전 버튼		tickerNewsPrevBtn : function() {			if(this.tickerNewsIdx>0) {				this.tickerNewsIdx--;				var data_value=this.tickerNewsData[this.tickerNewsIdx];				var enc_text=encodeURIComponent(nexUtils.htmlSpecialChars(data_value[2]));				var text='<a href="javascript:void(0);" onclick="cmmUtils.tickerNewsDetailOpen(\''+data_value[0]+'\',\''+data_value[1]+'\',\''+enc_text+'\',\''+data_value[4]+'\',\''+data_value[5]+'\');return false;">';				text+='['+data_value[3]+'] '+data_value[2]+'</a>';				$("#tickerNewsView").html(text);			}		},		//티커 국내지수 다음버튼		tickerJisu1NextBtn : function() {			if(this.tickerJisuIdx1<(this.tickerJisuData1.length-1)) {				this.tickerJisuIdx1++;				this.tickerJisu1DataLoad();			}		},		//티커 국내지수 이전버튼		tickerJisu1PrevBtn : function() {			if(this.tickerJisuIdx1>0) {				this.tickerJisuIdx1--;				this.tickerJisu1DataLoad();			}		},		//티커 해외지수 다음버튼		tickerJisu2NextBtn : function() {			if(this.tickerJisuIdx2<(this.tickerJisuData2.length-1)) {				this.tickerJisuIdx2++;				this.tickerJisu2DataLoad();			}		},		//티커 해외지수 이전버튼		tickerJisu2PrevBtn : function() {			if(this.tickerJisuIdx2>0) {				this.tickerJisuIdx2--;				this.tickerJisu2DataLoad();			}		},		//티커 국내지수 바인딩		tickerJisu1DataLoad : function() {			var selector=this.tickerJisuSelector1;			var jisu_data=this.tickerJisuData1[this.tickerJisuIdx1];			selector.name.text(jisu_data.name);			var data_023='',data_024='',data_033='',data_027='';			if(jisu_data.data !== undefined && jisu_data.data != null) {				if(jisu_data.data['023'] != undefined)					data_023=jisu_data.data['023'];				else					data_023=jisu_data.data['001023'];				if(jisu_data.data['024'] != undefined)					data_024=jisu_data.data['024'];				else					data_024=jisu_data.data['001024'];				if(jisu_data.data['033'] != undefined)					data_033=jisu_data.data['033'];				else					data_033=jisu_data.data['001033'];				if(jisu_data.data['027'] != undefined)					data_027=jisu_data.data['027'];				else					data_027=jisu_data.data['001027'];			}									data_023=nexFmt.sign(selector.data023, '', '', data_023);			selector.data023.text(data_023);						if(jisu_data.value=='106L6000' || jisu_data.value=='101L6000') {				data_024=nexFmt.sign5(selector.data024, '', '', data_024);			}else{				data_024=nexFmt.sign3(selector.data024, '', '', data_024);			}			selector.data024.text(data_024);			data_033=nexFmt.sign2(selector.data033, '', '', data_033);			selector.data033.text(data_033+'%');			selector.data027.text(String(data_027).commify());		},		//티커 해외지수 바인딩		tickerJisu2DataLoad : function() {			var selector=this.tickerJisuSelector2;			var jisu_data=this.tickerJisuData2[this.tickerJisuIdx2];			this.tickerJisuSelector2.name.text(jisu_data.name);			var data_023='',data_024='',data_033='',data_027='';			if(jisu_data.data !== undefined && jisu_data.data != null) {				if(jisu_data.data['023'] != undefined)					data_023=jisu_data.data['023'];				else					data_023=jisu_data.data['001023'];				if(jisu_data.data['024'] != undefined)					data_024=jisu_data.data['024'];				else					data_024=jisu_data.data['001024'];				if(jisu_data.data['033'] != undefined)					data_033=jisu_data.data['033'];				else					data_033=jisu_data.data['001033'];				if(jisu_data.data['027'] != undefined)					data_027=jisu_data.data['027'];				else					data_027=jisu_data.data['001027'];			}			data_023=nexFmt.sign(selector.data023, '', '', data_023);			selector.data023.text(data_023);			data_024=nexFmt.sign3(selector.data024, '', '', data_024);			selector.data024.text(data_024);			data_033=nexFmt.sign2(selector.data033, '', '', data_033);			selector.data033.text(data_033+'%');			selector.data027.text(String(data_027).commify());		},		stockLatelyCloseBtn:function(){			$("#stockLatelyDiv").hide();			this.configInfo.ticker.historyBarViewOn=false;		},		jisuNewsCloseBtn:function(){			$("#tickerDiv").hide();			this.configInfo.ticker.tickerViewOn=false;			clientSocket.pushViewOff('main','main');		},		configLoad:function(){			this.tickerJisuIdx1=0;			this.tickerJisuIdx2=0;			this.tickerJisuData1=[];			this.tickerJisuData2=[];			var ticker=this.configInfo.ticker;			for(var i=0, len=ticker.jisu1.length;i<len;i++) {				this.tickerJisuData1.push(this.configInfo.ticker.jisu1[i]);			}			for(var i=0, len=ticker.jisu2.length;i<len;i++) {				this.tickerJisuData2.push(this.configInfo.ticker.jisu2[i]);			}						if(ticker.tickerViewOn) {				$("#tickerDiv").show();			} else {				$("#tickerDiv").hide();			}			if(ticker.historyBarViewOn) {				$("#stockLatelyDiv").show();			} else {				$("#stockLatelyDiv").hide();			}		},		configDataSetting:function(data){			if(data["000002"].indexOf('|')>-1) {				var arr_start_view=data["000002"].trim().split('|');				this.configInfo.normal.startView.gbn=Number(arr_start_view[0]);				this.configInfo.normal.startView.viewNo=String(arr_start_view[1].trim());			} else {				this.configInfo.normal.startView.gbn='1';				this.configInfo.normal.startView.viewNo='';			}			if(data["000003"].trim()=='1' || data["000003"].trim()=='') {				this.configInfo.normal.marketLink=true;			} else {				this.configInfo.normal.marketLink=false;			}			if(data["000004"].trim()!='' && data["000004"].trim()!='0') {				this.configInfo.normal.viewCount=Number(data["000004"].trim());			} else {				this.configInfo.normal.viewCount=5;			}			if(data["000005"].trim()!='') {				var gubn_data=data["000005"].trim();				var new_code_data = NewsDataCode.vndr.slice(0);				new_code_data.sort(function(a,b){					if(Number(a.val) > Number(b.val)) return 1;					if(Number(a.val) < Number(b.val)) return -1;					return 0;				});								this.configInfo.news=[];				for(var i=0,len=gubn_data.length;i<len;i++) {					if(gubn_data.charAt(i)=='1') {						this.configInfo.news.push(new_code_data[i].code);					}				}			} else {				this.configInfo.news=['1','2','3','4','5','6','7','8','9','10','11','12','13'];			}			if(data["000006"].trim()=='1' || data["000006"].trim()=='') {				this.configInfo.ticker.tickerViewOn=true;			} else {				this.configInfo.ticker.tickerViewOn=false;			}			if(data["000008"].trim()=='1' || data["000008"].trim()=='') {				this.configInfo.ticker.historyBarViewOn=true;			} else {				this.configInfo.ticker.historyBarViewOn=false;			}			if(data["000007"].indexOf('|')>-1) {				this.configInfo.ticker.jisu1=[];				this.configInfo.ticker.jisu2=[];				var arr_jisu=data["000007"].trim().split('|');				if(arr_jisu[0].indexOf(',')>-1) {					var arr_jisu1=arr_jisu[0].split(',');					for(var i=0, len=arr_jisu1.length;i<len;i++) {						var code=arr_jisu1[i].trim();						if(code!='') {							var jisu_name=this.getJisuName(code);							if(jisu_name!='') {								this.configInfo.ticker.jisu1.push({name:jisu_name, value:code});							}						}					}				} else {					var code=arr_jisu[0].trim();					if(code!='') {						var jisu_name=this.getJisuName(code);						if(jisu_name!='') {							this.configInfo.ticker.jisu1.push({name:jisu_name, value:code});						}					}				}				if(arr_jisu[1].indexOf(',')>-1) {					var arr_jisu2=arr_jisu[1].split(',');					for(var i=0, len=arr_jisu2.length;i<len;i++) {						var code=arr_jisu2[i].trim();						if(code!='') {							var jisu_name=this.getJisuName(code);							if(jisu_name!='') {								this.configInfo.ticker.jisu2.push({name:jisu_name, value:code});							}						}					}				} else {					var code=arr_jisu[1].trim();					if(code!='') {						var jisu_name=this.getJisuName(code);						if(jisu_name!='') {							this.configInfo.ticker.jisu2.push({name:jisu_name, value:code});						}					}				}			} else {				this.configInfo.ticker.jisu1=[{name:'거래소', value:'K0001'}];				this.configInfo.ticker.jisu2=[{name:'E-Mini S&P 500(G)', value:'CME@ES'}];			}			if(data["000009"].trim()=='1') {				this.configInfo.contract=true;			} else {				this.configInfo.contract=false;			}			if(data["000012"].trim()=='1' || data["000012"].trim()=='') {				this.configInfo.order.okWin.stock=true;			} else {				this.configInfo.order.okWin.stock=false;			}			if(data["000013"].trim()=='1') {				this.configInfo.order.wonAuto.stock=true;			} else {				this.configInfo.order.wonAuto.stock=false;			}			if(data["000016"].trim()=='1' || data["000016"].trim()=='') {				this.configInfo.order.okWin.future=true;			} else {				this.configInfo.order.okWin.future=false;			}			if(data["000017"].trim()=='1') {				this.configInfo.order.wonAuto.future=true;			} else {				this.configInfo.order.wonAuto.future=false;			}			//this.configInfo		},		getJisuName:function(code) {			/*				K0001 : 거래소				K2001 : 코스피200				KSTOT : KRX100				101L6000 : 선물				KQ001 : 코스닥				KQ046 : 코스닥150				106L6000 : 코스닥150선물				CME@ES E-Mini S&P 500(G)				CME@SP S&P 선물				CME@NQ E-Mini 나스닥100(G)				DJI@DJI 다우산업				SPI@SPX S&P500				NAS@IXIC 나스닥종합				HSI@HSCE 홍콩 항셍 H				SHS@000001 중국 상해 종합				USI@SOXX 필라델피아 반도체				NII@NI225 일본니케이225				TWS@TI01 대만가권				SGI@STI 싱가폴STI				HSI@HSI 홍콩 항셍				SHS@000003 중국상해B				INI@BSE30 인도 Bombey Sensitive30				SZS@399108 중국심천B			*/			var name='';			switch(code) {				case 'K0001' :					name='거래소';					break;				case 'K2001' :					name='KOSPI 200';					break;				case 'KSTOT' :					name='KRX 100';					break;				case '101L6000' :					name='선물';					break;				case 'KQ001' :					name='코스닥';					break;				case 'KQ046' :					name='코스닥 150';					break;				case '106L6000' :					name='코스닥 150선물';					break;				case 'CME@ES' :					name='E-Mini S&P 500(G)';					break;				case 'CME@SP' :					name='S&P선물';					break;				case 'CME@NQ' :					name='E-Mini 나스닥100(G)';					break;				case 'DJI@DJI' :					name='다우산업';					break;				case 'SPI@SPX' :					name='S&P 500';					break;				case 'NAS@IXIC' :					name='나스닥종합';					break;				case 'HSI@HSCE' :					name='홍콩항셍H';					break;				case 'SHS@000001' :					name='중국상해종합';					break;				case 'USI@SOXX' :					name='필라델피아 반도체';					break;				case 'NII@NI225' :					name='일본니케이225';					break;				case 'TWS@TI01' :					name='대만가권';					break;				case 'SGI@STI' :					name='싱가폴STI';					break;				case 'HSI@HSI' :					name='홍콩항셍';					break;				case 'SHS@000003' :					name='중국 상해B';					break;				case 'INI@BSE30' :					name='인도 Bombey Sensitive30';					break;				case 'SZS@399108' :					name='중국 신천B';					break;			}			return name;		},		//종목별 계좌정보 조회		getAccountListData : function(gubn){			var rstAccList = [];			if(typeof(AccountData) != 'undefined' && AccountData != null){				var sType = ["01", "31", "32", "33", "34", "45", "99"];	//주식계좌				var cType = ["01", "32", "33", "34", "45", "99"];			//예수금계좌				var tType = ["01", "32", "33", "34", "99"];				//신용계좌				var fType = ["51", "55"];								//선물계좌				$.each(AccountData, function(i, accObj){					var accNo = accObj.AccountNo;					if(accNo == null || accNo == "" || accNo.length < 11) return true; //continue					accObj.AccNoDash	= accNo.substr(0,3)+"-"+accNo.substr(3,2)+"-"+accNo.substr(5,6);					//항목별 계좌리스트 구분					if(gubn == 'ALL'){						rstAccList.push(accObj);					}else{						var accTyp			= accNo.substr(3,2);						var checkType = [];						if(gubn == 'S')			checkType = sType; //주식계좌						else if(gubn == 'C')	checkType = cType; //예수금계좌						else if(gubn == 'T')	checkType = tType; //신용계좌						else if(gubn == 'F')	checkType = fType; //선물계좌						$.each(checkType, function(){							if(accTyp == this) rstAccList.push(accObj);						});					}				});			}			return rstAccList;		},		tickReg : function(){			clientSocket.rtsReg({				pName	: 'tick', 				vName	: 'tick', 				GUBUNS	: ['TICK'], 				VALUES	: ['TICK']			});		},		realData_TICK:function(data) {			//TICK : {"tickAccount":"00199315826","tickNo":"0000011","tickCode":"000660","tickName":"SK하이닉스","tickBidsAsks":"+현금매수","tickPrice":"29200","tickQuantity":"1","tickType":"12"}			if(data.tickType=='4' || data.tickType=='12' || data.tickType=='11') {				window.cmmUtils.tickContractData.push(data);			}		},		tickWinOpen:function(){			var option = {viewName:'x0002', parentName:'', position:'screen-center', bgClickHide:false, x:-250, y:-230, value:''};			nexDialog.open(option);		},		//선물옵션종목데이터 세팅		setFnoData : function(fnoCode, vName) {			var jongmok_data=this.getJongmokData(fnoCode);			if(jongmok_data!=null) {				var nm='';				if(jongmok_data.gbn=='MINIOPTION' || jongmok_data.gbn=='OPTION') {					nm=jongmok_data.value.ITMN;				} else {					nm=jongmok_data.value.KOR_ITMN;				}				var $ref_code=$("#mdi"+vName+" .search_area button[class=btn_recent]");				$("#mdi"+vName+" strong[name=fnoName]").text(nm);								this.fnoLatelyAdd(fnoCode, nm);								//최근종목 드랍다운 세팅				$ref_code.itemAllDelX();				var stock_lately_data=this.fnoLatelyData;				if (stock_lately_data != undefined)	{					for(var i=0, len=stock_lately_data.length;i<len;i++) {						$ref_code.itemAddX({item1:stock_lately_data[i].fnoName,item2:stock_lately_data[i].fnoCode});					}				}				$ref_code.off('btnClick').on('btnClick', function(){					var $this=$(this), stock_lately_data=window.cmmUtils.fnoLatelyData;					$this.itemAllDelX();					for(var i=0, len=stock_lately_data.length;i<len;i++) {						$this.itemAddX({item1:stock_lately_data[i].fnoName,item2:stock_lately_data[i].fnoCode});					}				});				$ref_code.off('itemSelect').on('itemSelect',function(e, data){					var v_name=vName;					nexMdi.setAllFnoCode(data.item2, v_name);									});				$ref_code.off('itemDel').on('itemDel',function(e, data){					var $this=$(this), _self=window.cmmUtils;					if(data.gbn=='all') {						$this.itemAllDelX();						_self.fnoLatelyData=[];						//_self.stockLatelyLoad();					} else {						$this.itemDelX({item1:data.item1, item2:data.item2});						_self.fnoLatelyDel(data.item2);					}				});				return true;			} else {				return false;			}		},		//선물옵션 최근종목 로드		fnoLatelyLoad:function(){			var html='';			var stock_lately_data=this.fnoLatelyData;			for(var i=0, len=stock_lately_data.length;i<len;i++) {				var class_text='firstchild';				if(i>0) {					class_text='';				}				html+='<li class="'+class_text+'"><a href="javascript:void(0);" onclick="nexMdi.setAllFnoCode(\''+stock_lately_data[i].fnoCode+'\');return false;">'+stock_lately_data[i].fnoName+'</a>';				html+='<button type="button" class="btn_close" onclick="cmmUtils.fnoLatelyDel(\''+stock_lately_data[i].fnoCode+'\');">';				html+='<span class="screen_out">닫기</span></button></li>';			}			$("#fnoLatelyList").html(html);		},		//선물옵션 최근종목 추가		fnoLatelyAdd:function(fnoCode, fnoName){			var stock_lately_data=this.fnoLatelyData;			if (stock_lately_data != undefined)	{				for(var i=0, len=stock_lately_data.length;i<len;i++) {					if(stock_lately_data[i].fnoCode==fnoCode) {						stock_lately_data.splice(i, 1);						break;					}				}				if(stock_lately_data.length==10) {					stock_lately_data.pop();				}				stock_lately_data.unshift({fnoCode:fnoCode, fnoName:fnoName});			} else {				//stock_lately_data=[];				stock_lately_data.push({fnoCode:fnoCode, fnoName:fnoName});			}			//this.fnoLatelyLoad();		},		//선물옵션 최근 종목 삭제		fnoLatelyDel:function(fnoCode){			var stock_lately_data=this.fnoLatelyData;			for(var i=0, len=stock_lately_data.length;i<len;i++) {				if(stock_lately_data[i].fnoCode==fnoCode) {					stock_lately_data.splice(i, 1);					break;				}			}			//this.fnoLatelyLoad();		}	};	window.cmmUtils = new cmmUtils();})(window, jQuery);