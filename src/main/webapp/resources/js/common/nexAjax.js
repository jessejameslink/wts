(function(window, $, undefined) {	/**	 * desc : 공통 Ajax 처리	 * date : 2015.07.23	 * author : 천창환	 * ex : nexAjax.send(options);	 * @param method: 전송방식 (POST, GET) default : POST	 * @param async : 처리방식 비동기(true), 동기(false) default : true	 * @param url : 요청 URL	 * @param param : parameters	 * @param dataType : DATA 종류 (json, html, xml) default : json	 * @param layerId : 조회영역 layerId 입력시 해당영역 로딩효과 처리 default : ''	 * @param viewName : 기타 옵션 default : ''	 * @param gbn : 기타 옵션 default : ''	 * @param loadingImg : 로딩 이미지 사용여부 default : false	 * @param secure : 암호화 처리구분 default : false	 * @param callback : ajax 결과 callback 함수	 * @param beforeSend : ajax 호출전 callback 함수	 * @param complete : ajax 완료후 callback 함수	 * @return callback(data)	 */
	//$.nexAjax({url:'sdafafda.jsp', param:{},callback:resultData});
	//function resultData(data) {		//결과처리 로직	//}
	var nexAjax = function() {		this.send=function(settings) {			new _nexAjax(settings).ajaxStart();		};
		this.removeLoadingView=function(layerId){			$("#" + layerId + "_loading").remove();			$("#" + layerId + "_loadingBg").remove();		};	}
	function _nexAjax(settings) {		var _self=this;		var _setValue=$.extend({				method: "POST",				async: true,		// ��������(true), ����(false)				url: "",				param: undefined,				dataType: "json",				dataType2:null,				layerId: "",				viewName:"",				gbn:"",				loadingImg: false,				secure:false,				callback: function() {},				error: function() {},				beforeSend: function() {},				complete: function() {}			}, settings);
		this._isEmpty=function(value){			var rslt = false;			if(typeof value == 'undefined' || value == null || value.trim() == ''){				rslt = true;			}else if(value instanceof Array && value.lenth == 0){				rslt = true;			}else if(value instanceof Object && $.isEmptyObject(value)){				rslt = true;			}			return rslt;		};
		this._errorCheck=function(result) {			var is_error_check=false;			for ( var idx in result) {				if(!_self._isEmpty(result[idx]['errorMsg']) ){					is_error_check=true;					//nexMdiCommon.wtsHistoryMsg(_setValue.viewName, result[idx]['errorMsg']);					break;				}			}			return is_error_check;		};
		this.convParam=function(object) {			var resultsArr = [];			for (var p in object) {				var value = object[p];				if (value) {					resultsArr.push(p.toString() + '=' + value);				}			}			return resultsArr.join('&');		};		this.ajaxCount=0;		this.ajaxStart=function(opt)		{			if(_self.ajaxCount>20) {				_self.ajaxCount=0;				return;			}
			if(typeof opt!='undefined') {				_setValue=opt;			}
			if(typeof _setValue.param=='undefined')				_setValue.param={};			/*			if(_setValue.gbn=="vo")			{				_setValue.param = JSON.stringify(_setValue.param);			}			*/			//_setValue.param=this.convParam(_setValue.param);			var ajax_url=_setValue.url;			var ajax_param=this.convParam(_setValue.param);			if(_setValue.secure)			{				if(typeof XecureAjaxGetMulti =='undefined') {					ajax_url=parent.XecureAjaxGetMulti(ajax_url);				}else{					ajax_url=XecureAjaxGetMulti(ajax_url);				}							if(ajax_url==false) {					_self.ajaxCount++;					setTimeout(function(){						_self.ajaxStart(_setValue);					},200);					return;				}
				if(typeof XecureAjaxPostMulti =='undefined') {					ajax_param=parent.XecureAjaxPostMulti(ajax_param);				}else{					ajax_param=XecureAjaxPostMulti(ajax_param);				}
				if(ajax_param==false) {					_self.ajaxCount++;					setTimeout(function(){						_self.ajaxStart(_setValue);					},200);										return;				}
				_setValue.url=ajax_url;				_setValue.param=ajax_param;				_setValue.dataType2=_setValue.dataType;				_setValue.dataType="text";			} else {				_setValue.dataType2=_setValue.dataType;				_setValue.dataType="text";			}
			var contentType="text/html; charset=UTF-8";
			if(_setValue.dataType=='xml') {				contentType="text/xml; charset=UTF-8";			} else if(_setValue.dataType=='text') {				contentType="text/html; charset=UTF-8";			}
			$.ajax({				type: _setValue.method,				url: _setValue.url,				data: _setValue.param,				dataType: _setValue.dataType,				async: _setValue.async,				//contentType: contentType,				success:_self._success,				error:_self._error,				beforeSend:_self._beforeSend,				complete:_self._complete			});		};
		this._success=function(result, textStauts, xhr) {			try {				if(_setValue.secure) {					result = result.replace(/\r/g, "");					result = result.replace(/\n/g, "");
					if(typeof BlockDec === undefined || BlockDec == null ) {						result=parent.BlockDec(result.trim());					}else{						result=BlockDec(result.trim());					}
					if(_setValue.dataType2=='json'){						try {							result=$.parseJSON(result);						} catch (err) {							result = '{"list\"'+result.split('"list\"')[1].split('"}]')[0] + '"}]}';							result=$.parseJSON(result);						}
						//if(result.returnCode=='Exception')						//	alert(result.message);						//else							_setValue.callback(result);					}else if(_setValue.dataType2=='xml'){						var xmlDoc=null;						try{							// code for IE							xmlDoc = new ActiveXObject("Microsoft.XMLDOM");							xmlDoc.async="false";							xmlDoc.loadXML(result);						}catch(e){							var parser=new DOMParser();							xmlDoc=parser.parseFromString(result,"text/xml");						}						result=xmlDoc;					}				} else {					if(_setValue.dataType=='text' || _setValue.dataType==null){						result = result.replace(/\r/g, "");						result = result.replace(/\n/g, "");						result=$.parseJSON(result.trim());					}
					//if(result.returnCode=='Exception')					//	alert(result.message);					//else						_setValue.callback(result);				}			} catch(err) {/*				if(setting.layerId != "") {					_self._removeLoadingBar();				}*/				//if(_setValue.viewName!='') nexMdiCommon.wtsHistoryMsg(_setValue.viewName, err);				if(typeof printStackTrace != 'undefined') {					var trace = printStackTrace({e: err});					alert('[' + err + ']\n\n' + trace.join('\n\n'));				} else {					// alert(err);				}			}		};
		this._error=function(xhr, textStauts, thrownError) {			_setValue.error(xhr, textStauts, thrownError);			if(_setValue.layerId != "") {				_self.removeLoadingBar();			}		};
		this._beforeSend=function(){			_setValue.beforeSend();			if(_setValue.layerId != "") {				_self._addLodingBar();			}		};
		this._complete=function(xhr, textStauts){			_setValue.complete(xhr, textStauts);			if(_setValue.layerId != "") {				_self._removeLoadingBar();			}		};
		this._addLodingBar=function()		{			var str = "";			var top = 0;			var left = 0;			var layer_top = $("#" + _setValue.layerId).scrollTop();			var layer_width = $("#" + _setValue.layerId).width();			var layer_height = $("#" + _setValue.layerId).height();
			var pad_top='0';			if($("#" + _setValue.layerId).css("padding-top"))				pad_top = $("#" + _setValue.layerId).css("padding-top").replace("px", "").replace("auto", "0");
			var pad_bottom='0';			if($("#" + _setValue.layerId).css("padding-bottom"))				pad_bottom = $("#" + _setValue.layerId).css("padding-bottom").replace("px", "").replace("auto", "0");
			var pad_left='0';			if($("#" + _setValue.layerId).css("padding-left"))				pad_left = $("#" + _setValue.layerId).css("padding-left").replace("px", "").replace("auto", "0");
			var pad_right='0';			if($("#" + _setValue.layerId).css("padding-right"))				pad_right = $("#" + _setValue.layerId).css("padding-right").replace("px", "").replace("auto", "0");
			var mar_top='0';			if($("#" + _setValue.layerId).css("margin-top"))				mar_top = $("#" + _setValue.layerId).css("margin-top").replace("px", "").replace("auto", "0");
			var mar_bottom='0';			if($("#" + _setValue.layerId).css("margin-bottom"))				mar_bottom = $("#" + _setValue.layerId).css("margin-bottom").replace("px", "").replace("auto", "0");
			var mar_left='0';			if($("#" + _setValue.layerId).css("margin-left"))				mar_left = $("#" + _setValue.layerId).css("margin-left").replace("px", "").replace("auto", "0");
			var mar_right='0';			if($("#" + _setValue.layerId).css("margin-right"))				mar_right = $("#" + _setValue.layerId).css("margin-right").replace("px", "").replace("auto", "0");
			layer_width += parseInt(pad_left) + parseInt(pad_right) + parseInt(mar_left) + parseInt(mar_right);			layer_height += parseInt(pad_top) + parseInt(pad_bottom) + parseInt(mar_top) + parseInt(mar_bottom);
			if(_setValue.loadingImg) {				str  = "<div id=\"" + _setValue.layerId + "_loading\" style=\"width:60px;height58px;\">";				str += "     <img src=\"/images/common/loading.gif\"/>";				str += "</div>";			}
			$("#" + _setValue.layerId).append(str);			$("#" + _setValue.layerId).append("<div id=\"" + _setValue.layerId + "_loadingBg\"></div>");
			top = (layer_height / 2) - ($("#" + _setValue.layerId + "_loading").height() / 2) + layer_top;			left = (layer_width / 2) - ($("#" + _setValue.layerId + "_loading").width() / 2);
			if($("#" + _setValue.layerId).css("position") != "absolute") {				$("#" + _setValue.layerId).css({"position":"relative"});			}
			$("#" + _setValue.layerId + "_loading").css({				"top": top,				"left": left,				"position":"absolute",				"z-index":"9999"			});
			var loading_bg_hgt = "100%";
			if($("#" + _setValue.layerId).height() != null && $("#" + _setValue.layerId).height() != "undefined") {				loading_bg_hgt = $("#" + _setValue.layerId).height() + "px";			}
			$("#" + _setValue.layerId + "_loadingBg").css({				"top": layer_top,				"left": 0,				"width": "100%",				"height": loading_bg_hgt,				"background": "#000",				"opacity": 0.08,				"position": "absolute",				"z-index":"9998"			});		};
		this._removeLoadingBar=function()		{			$("#" + _setValue.layerId + "_loading").remove();			$("#" + _setValue.layerId + "_loadingBg").remove();		};	}
	window.nexAjax = new nexAjax();})(window, jQuery);